# worker_processes 4;
# pid /run/nginx.pid;

# events {
#  worker_connections 768;
  # multi_accept on;
#}

# http {
#
#   sendfile on;
#   tcp_nopush on;
#   tcp_nodelay on;
#   keepalive_timeout 65;
#   types_hash_max_size 2048;
#   server_tokens off;
#
#   include /etc/nginx/mime.types;
#   default_type application/octet-stream;
#
#   access_log /var/log/nginx/access.log;
#   error_log /var/log/nginx/error.log;
#
#   gzip on;
#   gzip_disable "msie6";
#
#   # include /etc/nginx/conf.d/*.conf;
#   # include /etc/nginx/sites-enabled/*;
# }

server {
  listen 80;
  server_name lab_tensor_flow;
  #  ssl_certificate /etc/nginx/ssl/server.crt;
  #  ssl_certificate_key /etc/nginx/ssl/server.key;
  #  add_header Strict-Transport-Security max-age=2592000;
  # log_format compression '$remote_addr - $remote_user [$time_local] '
  #                      '"$request" $status $bytes_sent '
  #                      '"$http_referer" "$http_user_agent" "$gzip_ratio"';

  # error_log /dev/stderr info;
  # access_log /dev/stdout;
  access_log /var/log/nginx/access.log;

  root        /var/www;

  # location / {
  #   add_header Cache-Control "no-cache, no-store, must-revalidate";
  #   add_header Pragma "no-cache";
  #   add_header Expires 0;
  #   try_files $uri $uri/ index.html index.php =404;
  # }
  #
  # location /hello {
  #   include uwsgi_params;
  #   uwsgi_pass unix:///tmp/uwsgi.sock;
  # }

  location ~* {
    # proxy_bind 127.0.0.1;
    # OPTIONS request must be allowed through without authentication. This block must be placed before the rewrite rule
    if ($request_method = OPTIONS) {
      add_header Content-Length 0;
      add_header Access-Control-Allow-Methods "GET, OPTIONS";
      add_header Access-Control-Allow-Origin $http_origin;
      add_header Access-Control-Allow-Headers "Authorization, Content-Type, api_key";
      add_header Access-Control-Allow-Credentials true;
      return 204;
    }

    proxy_set_header X-Real-IP $remote_addr;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    include uwsgi_params;
    #proxy_pass http://localhost:9090;
    uwsgi_pass unix:///tmp/tf.sock;
  }
}
